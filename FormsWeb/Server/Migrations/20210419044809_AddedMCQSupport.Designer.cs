// <auto-generated />
using FormsWeb.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FormsWeb.Server.Migrations
{
    [DbContext(typeof(QuestionnaireDbContext))]
    [Migration("20210419044809_AddedMCQSupport")]
    partial class AddedMCQSupport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FormsWeb.Shared.MultipleChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MultipleChoiceSetId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MultipleChoiceSetId");

                    b.ToTable("MultipleChoice");
                });

            modelBuilder.Entity("FormsWeb.Shared.MultipleChoiceSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("MultipleChoiceSets");
                });

            modelBuilder.Entity("FormsWeb.Shared.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseTypeAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("FormsWeb.Shared.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionnaireOwnerEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionnaireTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionSets");
                });

            modelBuilder.Entity("FormsWeb.Shared.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseSetId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResponseSetId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("FormsWeb.Shared.ResponseMultipleChoiceSelectionMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MultipleChoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MultipleChoiceId");

                    b.HasIndex("ResponseId");

                    b.ToTable("ResponseMultipleChoiceSelectionMap");
                });

            modelBuilder.Entity("FormsWeb.Shared.ResponseSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseSetOwnerEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("ResponseSets");
                });

            modelBuilder.Entity("FormsWeb.Shared.MultipleChoice", b =>
                {
                    b.HasOne("FormsWeb.Shared.MultipleChoiceSet", "MultipleChoiceSet")
                        .WithMany("MultipleChoices")
                        .HasForeignKey("MultipleChoiceSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MultipleChoiceSet");
                });

            modelBuilder.Entity("FormsWeb.Shared.MultipleChoiceSet", b =>
                {
                    b.HasOne("FormsWeb.Shared.Question", "Question")
                        .WithOne("MultipleChoiceSet")
                        .HasForeignKey("FormsWeb.Shared.MultipleChoiceSet", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("FormsWeb.Shared.Question", b =>
                {
                    b.HasOne("FormsWeb.Shared.Questionnaire", "Questionnaire")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("FormsWeb.Shared.Response", b =>
                {
                    b.HasOne("FormsWeb.Shared.Question", "Question")
                        .WithMany("Responses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("FormsWeb.Shared.ResponseSet", "ResponseSet")
                        .WithMany("Responses")
                        .HasForeignKey("ResponseSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("ResponseSet");
                });

            modelBuilder.Entity("FormsWeb.Shared.ResponseMultipleChoiceSelectionMap", b =>
                {
                    b.HasOne("FormsWeb.Shared.MultipleChoice", "MultipleChoice")
                        .WithMany()
                        .HasForeignKey("MultipleChoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormsWeb.Shared.Response", "Response")
                        .WithMany("MultipleChoicesSelected")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("MultipleChoice");

                    b.Navigation("Response");
                });

            modelBuilder.Entity("FormsWeb.Shared.ResponseSet", b =>
                {
                    b.HasOne("FormsWeb.Shared.Questionnaire", "Questionnaire")
                        .WithMany()
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("FormsWeb.Shared.MultipleChoiceSet", b =>
                {
                    b.Navigation("MultipleChoices");
                });

            modelBuilder.Entity("FormsWeb.Shared.Question", b =>
                {
                    b.Navigation("MultipleChoiceSet");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("FormsWeb.Shared.Questionnaire", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("FormsWeb.Shared.Response", b =>
                {
                    b.Navigation("MultipleChoicesSelected");
                });

            modelBuilder.Entity("FormsWeb.Shared.ResponseSet", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
